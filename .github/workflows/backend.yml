name: Backend

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, closed]
  push:
    branches: [ main ]
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1

      with:
        node-version: ${{ matrix.node-version }}
    - name: Install
      run: npm install
    - name: Build
      run: npm run build

  build-docker:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the docker container
      run: docker build -t maestro-server-lambda .

  terraform:
    environment: Production
    runs-on: ubuntu-latest

    env:
      TF_VAR_access_token: ${{ secrets.ACCESS_TOKEN }}
      TF_VAR_tmdb_key: ${{ secrets.TMDB_KEY }}
      TF_VAR_main_maestro_account: ${{ secrets.MAESTRO_MAIN_ACCOUNT }}
      TF_VAR_cloudflare_email: ${{ secrets.CLOUDFLARE_EMAIL }}
      TF_VAR_cloudflare_key: ${{ secrets.CLOUDFLARE_KEY }}
      TF_VAR_dns_zone: ${{ secrets.DNS_ZONE }}
      TF_VAR_public_key: ${{ secrets.PUBLIC_KEY }}
      TF_VAR_private_key: ${{ secrets.PRIVATE_KEY }}

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 16.x
      uses: actions/setup-node@v1
      with:
        node-version: 16.x
    - name: Install
      run: npm install
    - name: Build
      run: npm run build
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-2
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.2.4
    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: terraform/lambdas
    - name: Terraform Plan
      id: plan
      run: terraform plan -out out.tfplan
      working-directory: terraform/lambdas
    - name: Terraform apply
      id: apply
      if: github.event.pull_request.merged == true || (github.event_name == 'push' && github.ref == 'refs/heads/main')
      run: terraform apply out.tfplan
      working-directory: terraform/lambdas



